//io_handler.c
#include "io_handler.h"
#include <stdio.h>

void IO_init(void)
{
	*otg_hpi_reset = 1;
	*otg_hpi_cs = 1;
	*otg_hpi_r = 1;
	*otg_hpi_w = 1;
	*otg_hpi_address = 0;
	*otg_hpi_data = 0;
	// Reset OTG chip
	*otg_hpi_cs = 0;
	*otg_hpi_reset = 0;
	*otg_hpi_reset = 1;
	*otg_hpi_cs = 1;
}

void IO_write(alt_u8 Address, alt_u16 Data)
{
	volatile unsigned int temp;

	switch (alt_u8 Address)
	{
	case(00):
	*otg_hpi_r=0;		//inable read
	*otg_hpi_address=0;	//set address
	temp=*otg_hpi_data;	//load value from reg to temp
	*otg_hpi_r=1;		//disable read
	Return(temp);		// return value

	case(01):
	*otg_hpi_r=0;		//inable read
	*otg_hpi_address=0;	//set address
	temp=*otg_hpi_data;	//load value from reg to temp
	*otg_hpi_r=1;		//disable read
	Return(temp);		// return value

	case(10):
	*otg_hpi_r=0;		//inable read
	*otg_hpi_address=0;	//set address
	temp=*otg_hpi_data;	//load value from reg to temp		*otg_hpi_r=1;		//disable read
	Return(temp);		// return value

	case(11):
	*otg_hpi_r=0;		//inable read
	*otg_hpi_address=0;	//set address
	temp=*otg_hpi_data;	//load value from reg to temp
	*otg_hpi_r=1;		//disable read
	Return(temp);		// return value

	}
}

alt_u16 IO_read(alt_u8 Address)
{
	alt_u16 temp;
//*************************************************************************//
//									TASK								   //
//*************************************************************************//
//							Write this function							   //
//*************************************************************************//
	//printf("%x\n",temp);
	return temp;
}
